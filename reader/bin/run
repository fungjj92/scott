#!/bin/sh
set -e

if [ -z "$READER_ROOT" ]; then
  echo Activate before running this.
  exit 1
fi

# Download the listing
(
  LISTING_URL='http://www.mvn.usace.army.mil/ops/regulatory/publicnotices.asp?ShowLocationOrder=False'
  cd "$READER_ROOT/../listings"
  wsync "$LISTING_URL" publicnotices.asp html
)

# Parse the listing
(
  cd "$READER_ROOT/../listings"
  listing publicnotices.asp.html web
)


# Download the public notices and drawings
(
  tmp=$(mktemp)
  cd "$READER_ROOT/../listings"
  permits=$(listing publicnotices.asp.html terminal | sed '/^$/d' > $tmp)

  while [ $(( $(cat $tmp | wc -l))) > 0 ] ; do
    permitApplicationNumber=$(head -n1 $tmp | cut -f1)
    publicNoticeUrl=$(head -n1 $tmp | cut -f2)
    drawingsUrl=$(head -n1 $tmp | cut -f3)

    mkdir -p "$READER_ROOT/../documents/$permitApplicationNumber"
    cd "$READER_ROOT/../documents/$permitApplicationNumber"
    ARMY='http://www.mvn.usace.army.mil/ops/regulatory/'
    wsync "${ARMY}${publicNoticeUrl}" public_notice pdf
    sleep 1s
    wsync "${ARMY}${drawingsUrl}" drawings pdf
    sleep 1s
    sed -i 1d $tmp
  done
)

# Parse the public notice
(
  cd "$READER_ROOT/../documents"
  for permitApplicationNumber in *; do
    (
      cd $permitApplicationNumber
      translate public_notice.pdf
      public_notice public_notice.pdf.txt
      convert -geometry 1200 public_notice.pdf[0] public_notice.jpg
      convert -geometry 1200 drawings.pdf[1] drawings.jpg
    )
  done
)
